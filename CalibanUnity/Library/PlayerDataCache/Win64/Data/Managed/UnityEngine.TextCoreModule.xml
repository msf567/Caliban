<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.TextCoreModule</name>
    </assembly>
    <member name="T:UnityEngine.TextCore.Glyph">
      <summary>
        <para>A Glyph is the visual representation of a text element or character.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.advanceX">
      <summary>
        <para>The horizontal distance to increase (left to right) or decrease (right to left) the drawing position relative to the origin of the text element. This determines the origin position of the next element.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.atlasIndex">
      <summary>
        <para>The index of the atlas texture that contains this glyph.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.bearingX">
      <summary>
        <para>The horizontal distance from the current drawing position (origin) relative to the elements' left bounding box edge (bbox).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.bearingY">
      <summary>
        <para>The vertical distance from the current baseline relative to the elements' top bounding box edge (bbox).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextCore.Glyph.height">
      <summary>
        <para>The height of the glyph.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.index">
      <summary>
        <para>The index of the glyph in the source font file.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.Glyph.scale">
      <summary>
        <para>The relative scale of the glyph. The default value is 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextCore.Glyph.width">
      <summary>
        <para>The width of the glyph.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextCore.Glyph.x">
      <summary>
        <para>The x position of the glyph in the font atlas texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextCore.Glyph.y">
      <summary>
        <para>The y position of the glyph in the font atlas texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TextCore.Glyph.#ctor">
      <summary>
        <para>Constructor for a new glyph.</para>
      </summary>
      <param name="glyph">Glyph used as a reference for the new glyph.</param>
      <param name="index">Index of the glyph.</param>
      <param name="bearingX">The bearingX of the glyph.</param>
      <param name="bearingY">The bearingY of the glyph.</param>
      <param name="width">The width of the glyph.</param>
      <param name="height">The height of the glyph.</param>
      <param name="advanceX">The advanceX of the glyph.</param>
      <param name="scale">The relative scale of the glyph.</param>
      <param name="atlasIndex">The index of the atlas texture that contains this glyph.</param>
    </member>
    <member name="M:UnityEngine.TextCore.Glyph.#ctor(UnityEngine.TextCore.Glyph)">
      <summary>
        <para>Constructor for a new glyph.</para>
      </summary>
      <param name="glyph">Glyph used as a reference for the new glyph.</param>
      <param name="index">Index of the glyph.</param>
      <param name="bearingX">The bearingX of the glyph.</param>
      <param name="bearingY">The bearingY of the glyph.</param>
      <param name="width">The width of the glyph.</param>
      <param name="height">The height of the glyph.</param>
      <param name="advanceX">The advanceX of the glyph.</param>
      <param name="scale">The relative scale of the glyph.</param>
      <param name="atlasIndex">The index of the atlas texture that contains this glyph.</param>
    </member>
    <member name="M:UnityEngine.TextCore.Glyph.#ctor(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32)">
      <summary>
        <para>Constructor for a new glyph.</para>
      </summary>
      <param name="glyph">Glyph used as a reference for the new glyph.</param>
      <param name="index">Index of the glyph.</param>
      <param name="bearingX">The bearingX of the glyph.</param>
      <param name="bearingY">The bearingY of the glyph.</param>
      <param name="width">The width of the glyph.</param>
      <param name="height">The height of the glyph.</param>
      <param name="advanceX">The advanceX of the glyph.</param>
      <param name="scale">The relative scale of the glyph.</param>
      <param name="atlasIndex">The index of the atlas texture that contains this glyph.</param>
    </member>
    <member name="T:UnityEngine.TextCore.LowLevel.FontEngine">
      <summary>
        <para>The FontEngine is used to access data from source font files. This includes information about individual characters, glyphs and relevant metrics typically used in the process of text parsing, layout and rendering.

The types of font files supported are TrueType (.ttf, .ttc) and OpenType (.otf).

The FontEngine is also used to raster the visual representation of characters known as glyphs in a given font atlas texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.AddGlyphsToTexture(UnityEngine.TextCore.Glyph[],System.Int32,UnityEngine.TextCore.LowLevel.GlyphRenderModes,UnityEngine.Texture2D)">
      <summary>
        <para>Try rasterizing and adding the given list of glyphs to the provided texture.</para>
      </summary>
      <param name="padding">The padding value around the glyph.</param>
      <param name="renderMode">The mode used to render the glyph in the texture.</param>
      <param name="texture">A reference to the texture to which the glyph should be added.</param>
      <param name="glyphs">Array that contains the glyphs to be added to the texture.</param>
      <returns>
        <para>Returns a value of zero (0) if the glyphs were successfully added to the texture.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.AddGlyphToTexture(UnityEngine.TextCore.Glyph,System.Int32,UnityEngine.TextCore.LowLevel.GlyphRenderModes,UnityEngine.Texture2D)">
      <summary>
        <para>Try rasterizing and adding the given glyph to the provided texture.</para>
      </summary>
      <param name="glyph">The glyph to be added to the texture.</param>
      <param name="padding">The padding value around the glyph.</param>
      <param name="renderMode">The mode used to render the glyph into the texture.</param>
      <param name="texture">A reference to the texture to which the glyph should be added.</param>
      <returns>
        <para>Returns a value of zero (0) if the glyph was successfully added to the texture.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.DestroyFontEngine">
      <summary>
        <para>Destroy and unload resources used by the Font Engine.</para>
      </summary>
      <returns>
        <para>A value of zero (0) if the Font Engine and used resources were successfully released.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphIndex(System.UInt32)">
      <summary>
        <para>Get the index of the glyph for the character mapped at the given Unicode value.</para>
      </summary>
      <param name="unicode">The Unicode value of the character for which to lookup the glyph index.</param>
      <returns>
        <para>The index of the glyph used by the character using the Unicode value. Returns zero (.notdef glyph) if no glyph exists for the given Unicode value.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.InitializeFontEngine">
      <summary>
        <para>Initialize the Font Engine and required resources.</para>
      </summary>
      <returns>
        <para>A value of zero (0) if the initialization of the Font Engine was successful.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace(System.String)">
      <summary>
        <para>Load a source font file.</para>
      </summary>
      <param name="filePath">The path of the source font file relative to the project.</param>
      <param name="pointSize">The point size used to scale the font face.</param>
      <param name="sourceFontFile">An array that contains the font file.</param>
      <returns>
        <para>A value of zero (0) if the font face was loaded successfully.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace(System.String,System.Int32)">
      <summary>
        <para>Load a source font file.</para>
      </summary>
      <param name="filePath">The path of the source font file relative to the project.</param>
      <param name="pointSize">The point size used to scale the font face.</param>
      <param name="sourceFontFile">An array that contains the font file.</param>
      <returns>
        <para>A value of zero (0) if the font face was loaded successfully.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace(System.Byte[])">
      <summary>
        <para>Load a source font file.</para>
      </summary>
      <param name="filePath">The path of the source font file relative to the project.</param>
      <param name="pointSize">The point size used to scale the font face.</param>
      <param name="sourceFontFile">An array that contains the font file.</param>
      <returns>
        <para>A value of zero (0) if the font face was loaded successfully.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace(System.Byte[],System.Int32)">
      <summary>
        <para>Load a source font file.</para>
      </summary>
      <param name="filePath">The path of the source font file relative to the project.</param>
      <param name="pointSize">The point size used to scale the font face.</param>
      <param name="sourceFontFile">An array that contains the font file.</param>
      <returns>
        <para>A value of zero (0) if the font face was loaded successfully.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.SetFaceSize(System.Int32)">
      <summary>
        <para>Set the size of the currently loaded font face.</para>
      </summary>
      <param name="pointSize">The point size used to scale the font face.</param>
      <returns>
        <para>A value of zero (0) if the font face was successfully scaled to the given point size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue(System.UInt32,UnityEngine.TextCore.LowLevel.GlyphLoadFlags,UnityEngine.TextCore.Glyph&amp;)">
      <summary>
        <para>Try loading the glyph for the given index value and if available populate the glyph.</para>
      </summary>
      <param name="glyphIndex">The index of the glyph that should be loaded.</param>
      <param name="flags">The glyph loading flag that should be used to load the glyph.</param>
      <param name="glyph">The glyph using the provided index or the .notdef glyph (index 0) if no glyph was found at that index.</param>
      <returns>
        <para>Returns true if a glyph exists at the given index. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue(System.UInt32,UnityEngine.TextCore.LowLevel.GlyphLoadFlags,UnityEngine.TextCore.Glyph&amp;)">
      <summary>
        <para>Try loading a glyph for the given unicode value. If available, populates the glyph and returns true. Otherwise returns false and populates the glyph with the .notdef / missing glyph data.</para>
      </summary>
      <param name="flags">The glyph loading flag that should be used to load the glyph.</param>
      <param name="glyph">The glyph using the provided index or the .notdef glyph (index 0) if no glyph was found at that index.</param>
      <param name="unicode">The Unicode value of the character whose glyph should be loaded.</param>
      <returns>
        <para>Returns true if a glyph exists for the given unicode value. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.TextCore.LowLevel.FontEngineError">
      <summary>
        <para>Error code returned by the various FontEngine functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_Character_Code">
      <summary>
        <para>Error code returned by the LoadGlyph function when referencing an invalid Unicode character value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_File_Format">
      <summary>
        <para>Error code returned by the LoadFontFace function when the source font file is of an unknown or invalid format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_File_Path">
      <summary>
        <para>Error code returned by the LoadFontFace function when the file path to the source font file appears invalid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_File_Structure">
      <summary>
        <para>Error code returned by the LoadFontFace function when the source font file appears invalid or improperly formatted.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_Glyph_Index">
      <summary>
        <para>Error code returned by the LoadGlyph function when referencing an invalid or out of range glyph index value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Invalid_Pixel_Size">
      <summary>
        <para>Error code returned by the LoadGlyph or SetFaceSize functions using an invalid pointSize value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.FontEngineError.Success">
      <summary>
        <para>Error code returned when the function was successfully executed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextCore.LowLevel.GlyphLoadFlags">
      <summary>
        <para>The various options (flags) used by the FontEngine when loading glyphs from a font face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_BITMAP_METRICS_ONLY">
      <summary>
        <para>Load glyph metrics without allocating and loading the bitmap data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_COMPUTE_METRICS">
      <summary>
        <para>Load glyph metrics without using the 'hdmx' table. This flag is mostly used to validate font data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_DEFAULT">
      <summary>
        <para>Load glyph metrics and bitmap representation if available for the current face size.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_FORCE_AUTOHINT">
      <summary>
        <para>Load glyphs using the auto hinter instead of the font's native hinter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_MONOCHROME">
      <summary>
        <para>Load glyph metrics and render outline using 1-bit monochrome.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_NO_AUTOHINT">
      <summary>
        <para>Load glyphs using the font's native hinter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_NO_BITMAP">
      <summary>
        <para>Load glyphs and ignore embedded bitmap strikes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_NO_HINTING">
      <summary>
        <para>Load glyphs without hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_NO_SCALE">
      <summary>
        <para>Load glyphs at default font units without scaling. This flag implies LOAD_NO_HINTING and LOAD_NO_BITMAP and unsets LOAD_RENDER.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphLoadFlags.LOAD_RENDER">
      <summary>
        <para>Load glyph metrics and render outline using 8-bit or antialiased image of the glyph.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextCore.LowLevel.GlyphRenderModes">
      <summary>
        <para>The Rendering modes available for rendering and adding new glyphs into a font atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.RASTER">
      <summary>
        <para>Renders a bitmap representation of the glyph from binary or 1-bit monochrome image of the glyph outline with no hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.RASTER_HINTED">
      <summary>
        <para>Renders a bitmap representation of the glyph from binary or 1-bit monochrome image of the glyph outline with hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SDF">
      <summary>
        <para>Renders a signed distance field (SDF) representation of the glyph from binary or 1-bit monochrome image of the glyph outline with no hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SDF16">
      <summary>
        <para>Renders a signed distance field (SDF) representation of the glyph from binary or 1-bit monochrome image of the glyph outline with no hinting. The sampling of the glyph is upscaled by 16x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SDF32">
      <summary>
        <para>Renders a signed distance field (SDF) representation of the glyph from binary or 1-bit monochrome image of the glyph outline with no hinting. The sampling of the glyph is upscaled by 32x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SDF8">
      <summary>
        <para>Renders a signed distance field (SDF) representation of the glyph from binary or 1-bit monochrome image of the glyph outline with no hinting. The sampling of the glyph is upscaled by 8x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SDFAA">
      <summary>
        <para>Renders a signed distance field (SDF) representation of the glyph from an 8-bit or antialiased image of the glyph outline with no hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SMOOTH">
      <summary>
        <para>Renders a bitmap representation of the glyph from an 8-bit or antialiased image of the glyph outline with no hinting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextCore.LowLevel.GlyphRenderModes.SMOOTH_HINTED">
      <summary>
        <para>Renders a bitmap representation of the glyph from an 8-bit or antialiased image of the glyph outline with hinting.</para>
      </summary>
    </member>
  </members>
</doc>
